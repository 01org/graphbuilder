
***********************************
* Intel Graph Builder 1.0 Release *
***********************************

GraphBuilder is a Java library for preparing graphs from large volume of
unstructured, semi-structured or structured data. Data relationships play a
vital role in various data analytics and structured machine learning
applications. These relationships can be collectively expressed as graphs. A
graph is a collection of objects (vertices) and the relationships between them
(edges).

Processing large graphs requires distributed computing environments that impose
challenges such as parallelization, load balancing, task distribution, fault
tolerance and data consistency. Such challenges are equally applicable to the
problem of large graph construction from unstructured or semi-structured data.
In addition users need to consider parsing and feature extraction of large
datasets, transformation of vertices and edge labels into internal (integer)
representation and partitioning of the constructed graph at scale. Graph
Builder address these challenges by encapsulating construction process in the
library written in Java using Apache Hadoop framework and achieves scalability. 


How to build the Graph Builder?
------------------------------
The Graph Builder is using Maven for building the package, ensure maven is 
installed on the system. To build package type:
$> mvn package

Notes that ASM.jar library from maven does not work. Please download asm.jar and
asm-pom into local repository yourself. And use the following command to install
asm into your local maven repository: 
  mvn install:install-file -Dfile=asm-3.1.jar -DgroupId=asm -DartifactId=asm \
  -Dversion=3.1 -Dpackaging=jar -DpomFile=asm-3.1.pom


How to use the Graph Builder? 
----------------------------
The Graph Builder library can be used in multiple ways. Library groups multiple 
MapReduce jobs in four major groups: a) GraphCreation b) ComputeNetworkInfo 
c) GraphNormalization d) GraphPartitioning. These group can be chained to form 
graph construction pipeline depending on an application requirements (e.g. Please 
refer construction pipeline for link and doc-word graph in demoapps dir).  

Library can be used as tool to construct link and doc-word graph for Wikipedia
using following command:

* Link graph construction -
$> hadoop jar target/graphbuilder-1.0.0-SNAPSHOT-hadoop-job.jar \
              com.intel.hadoop.graphbuilder.demoapps.wikipedia.linkgraph.LinkGraphEnd2End <# of partition> \
			  <hdfs input directory> <hdfs output directory> <partitionMethod>

* Doc-word graph construction -
$> hadoop jar target/graphbuilder-1.0.0-SNAPSHOT-hadoop-job.jar \
              com.intel.hadoop.graphbuilder.demoapps.wikipedia.docwordgraph.TFIDFGraphEnd2End <# of partition> \
			  <hdfs input directory> <hdfs output directory> <partitionMethod> <optional enable_tfidf> \
			  <optional stop word filter list>

* The partitionMethod options are
  0 -- Random
  1 -- Greedy
  2 -- ConstrainedRandom (Grid)
  3 -- ConstrainedGreedy (Grid)
  4 -- ConstrainedPDSRandom

Sample application code
----------------------- 
Early stage in graph building pipeline is data dependent, hence we abstracted 
out the data dependent code from the library and provided interface to plug-in 
data-specific code. Sample code for those interface can be found in demoapps 
directory. It contains code for generating link-graphs and doc-word 
graph out of Wikipedia XML dump. Interfaces are documented, please refer
a Javadoc in the doc directory.
